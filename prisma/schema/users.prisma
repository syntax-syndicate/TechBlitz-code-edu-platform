enum userLevel {
  STANDARD
  ADMIN
  TRIAL
  FREE
  PREMIUM
  LIFETIME // different to premium as they have limited ai credit & roadmap generation
}

enum UserExperienceLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  MASTER
}

enum UserTimeSpendingPerDay {
  LESS_THAN_5_MINUTES
  BETWEEN_5_AND_15_MINUTES
  BETWEEN_15_AND_30_MINUTES
  BETWEEN_30_AND_60_MINUTES
  MORE_THAN_60_MINUTES
}

model Users {
  uid                         String              @id
  email                       String              @unique
  createdAt                   DateTime            @default(now())
  updatedAt                   DateTime            @updatedAt
  lastLogin                   DateTime?
  userLevel                   userLevel           @default(STANDARD)
  correctDailyStreak          Int?                @default(0)
  totalDailyStreak            Int?                @default(0)
  userProfilePicture          String?
  showTimeTaken               Boolean             @default(false)
  firstName                   String?
  lastName                    String?
  username                    String?
  sendPushNotifications       Boolean             @default(false)
  codeEditorTheme             String?             @default("vs-dark")
  stripeEmails                String[]            @default([])
  aiQuestionHelpTokens        Int                 @default(10)
  experienceLevel             UserExperienceLevel @default(BEGINNER)
  isCustomUsername            Boolean             @default(false)
  howDidYouHearAboutTechBlitz String?
  referralCode                String?
  aboutMeAiHelp               String?
  // this prevents us sending it every day after the first time
  hasSent7DayNoChallengeEmail Boolean             @default(false)
  timeSpendingPerDay          UserTimeSpendingPerDay? @default(LESS_THAN_5_MINUTES)
  sendPromotionalEmails       Boolean             @default(false)
  // total user xp
  userXp                Int                 @default(0)
  weeklyUserXp               Int                 @default(0)

  // this is the coupon code that we created for the user
  userCustomCoupon            String?
  // this is to prevent us from creating the same coupon code for the same user
  hasCreatedCustomSignupCoupon Boolean             @default(false)
  // expires at
  userCustomCouponExpiresAt   DateTime?


  // relations
  achievements                Achievement[]
  answers                     Answers[]
  Profile                     Profile?
  StatisticsReport            StatisticsReport[]
  streak                      Streaks?
  studyPathGoals              StudyPathGoal[]
  subscription                Subscriptions?
  bookmarks                   UserBookmarks[]
  roadmaps                    UserRoadmaps[]
  studyPathEnrollments        UserStudyPath[]
  userMissions                UserMission[]

  LeagueHistory LeagueHistory[]

  LeagueAchievement LeagueAchievement[]

  UserLeague UserLeague[]
}

model Streaks {
  uid                String    @id @default(cuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  userUid            String    @unique
  streakStart        DateTime?
  streakEnd          DateTime?
  currentstreakCount Int       @default(0)
  longestStreak      Int       @default(0)
  user               Users     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
}

model Subscriptions {
  uid                      String    @id @default(cuid())
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  userUid                  String    @unique
  startDate                DateTime?
  endDate                  DateTime?
  active                   Boolean   @default(true)
  planId                   String
  planTrial                Boolean   @default(false)
  planTrialDays            Int?
  productId                String
  stripeCustomerId         String?
  stripeSubscriptionId     String?
  stripeSubscriptionItemId String?
  user                     Users     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
}

model Profile {
  uid                  String    @id @default(cuid())
  userUid              String    @unique
  instagram            String?
  github               String?
  linkedin             String?
  twitter              String?
  youtube              String?
  tiktok               String?
  twitch               String?
  website              String?
  bio                  String?
  location             String?
  country              String?
  timezone             String?
  company              String?
  jobTitle             String?
  yearsOfExperience    Int?
  programmingLanguages String[]  @default([])
  frameworks           String[]  @default([])
  interests            String[]  @default([])
  projects             String[]  @default([])
  isPublic             Boolean   @default(true)
  showEmail            Boolean   @default(false)
  showLocation         Boolean   @default(true)
  accentColor          String?
  bannerImage          String?
  viewCount            Int       @default(0)
  lastViewed           DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  handle               String
  user                 Users     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
}

